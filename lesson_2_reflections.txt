What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository, Git creates the nessesary file in 
order to keep track of commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows you to better choose what updates you want to
commit.

How can you use the staging area to make sure you have one commit per logical change?

You can use it to update only the files you have changed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If you're making multiple versions of the game, or making expiremental
changes, it can help.

How do the diagrams help you visualize the branch structure?

They show how git's commit structure is nonlinear.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

When two branches are merged, one branch's changes are incorporated
into another, as opposed to two branches merging and becoming a new 
branch

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Git's automatic branches make merging code more conveinient, although
conflicts still have to be resolved manually.